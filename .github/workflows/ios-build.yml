name: iOS Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        working-directory: ios
        
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Import Apple Certificate
      env:
        APPLE_CERTIFICATE_BASE64: ${{ secrets.APPLE_CERTIFICATE_BASE64 }}
        APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        
        # Import certificate
        echo "$APPLE_CERTIFICATE_BASE64" | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain
        
    - name: Import Provisioning Profile
      env:
        APPLE_PROVISIONING_PROFILE_BASE64: ${{ secrets.APPLE_PROVISIONING_PROFILE_BASE64 }}
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo "$APPLE_PROVISIONING_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
        
    - name: Build iOS App
      run: |
        cd ios
        xcodebuild -workspace MihmandarMobile.xcworkspace \
          -scheme MihmandarMobile \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath $PWD/build/MihmandarMobile.xcarchive \
          archive
          
    - name: Export IPA
      env:
        EXPORT_OPTIONS_PLIST: ${{ secrets.EXPORT_OPTIONS_PLIST }}
      run: |
        cd ios
        echo "$EXPORT_OPTIONS_PLIST" | base64 --decode > ExportOptions.plist
        xcodebuild -exportArchive \
          -archivePath $PWD/build/MihmandarMobile.xcarchive \
          -exportOptionsPlist ExportOptions.plist \
          -exportPath $PWD/build
          
    - name: Upload to App Store Connect
      env:
        APPLE_API_KEY_BASE64: ${{ secrets.APPLE_API_KEY_BASE64 }}
        APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
        APPLE_API_ISSUER_ID: ${{ secrets.APPLE_API_ISSUER_ID }}
      run: |
        # Create API key file
        mkdir -p ~/.appstoreconnect/private_keys
        echo "$APPLE_API_KEY_BASE64" | base64 --decode > ~/.appstoreconnect/private_keys/AuthKey_$APPLE_API_KEY_ID.p8
        
        # Upload to App Store Connect
        cd ios/build
        xcrun altool --upload-app \
          --type ios \
          --file MihmandarMobile.ipa \
          --apiKey $APPLE_API_KEY_ID \
          --apiIssuer $APPLE_API_ISSUER_ID
          
    - name: Upload IPA as artifact
      uses: actions/upload-artifact@v4
      with:
        name: MihmandarMobile-iOS
        path: ios/build/MihmandarMobile.ipa
        retention-days: 30
        
    - name: Clean up keychain
      if: always()
      run: |
        security delete-keychain build.keychain || true
        rm -f certificate.p12 || true